1. r_users    ---> table for general users
----------------------
create table r_users(
email varchar(100) not null primary key,
name varchar(100) not null,
street varchar(200),
city varchar(50),
mobile_no varchar(10),
password varchar(250) not null,
image varchar(200)
);

2. rest_user --> table for rest users
------------------

create table rest_user(
r_id int not null primary key auto_increment,
email varchar(100) not null,
name varchar(100) not null,
r_area varchar(200) not null,
city varchar(50) not null,
mobile_no varchar(10) not null,
r_password varchar(250) not null,
r_image varchar(200)
);

3. products --> table for rest. product
----------------------

create table products(
p_id int not null primary key auto_increment,
r_id int not null,
p_name varchar(150) not null,
p_type enum('n','v') not null,
p_price double not null,
foreign key (r_id) references rest_user (r_id)
on update cascade on delete cascade 
);
4. rest_order_history--> order table for resturent

create table rest_order_history(
ro_id int not null primary key auto_increment,
r_id int not null,
d_status int default 0,
addr varchar(500) not null,
foreign key (r_id) references rest_user (r_id)
on update cascade on delete cascade 
);

5. store_rest_orders---> storing order

create table store_rest_orders(
s_id int not null primary key auto_increment,
ro_id int not null,
ord varchar(100),
foreign key (ro_id) references rest_order_history (ro_id)
on update cascade on delete cascade
);

6. user_order_history

create table  user_order_history(
email varchar(100) not null,
ro_id int not null
);

7. all_email--> email list
create table all_email(
email varchar(100) not null primary key);

8. reviews--> restaurant product reviews

create table reviews(
re_id int not null auto_increment primary key,
r_id int not null,
email varchar(100) not null,
name varchar(100) not null,
re_text varchar(1000) not null,
image varchar(200) not null,
status int default 0,
tm varchar(40),
foreign key (email) references all_email (email)
on update cascade on delete cascade,
foreign key (r_id) references rest_user (r_id)
on update cascade on delete cascade
);

9. contactus-->

create table contact_us(
c_id int not null auto_increment primary key,
name varchar(100) not null,
email varchar(100) not null,
mobile varchar(10) not null,
mess varchar(200) not null);


